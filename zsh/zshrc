# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh
export DOTFILES=$HOME/dotfiles
export ZSH_PLUGINS=$DOTFILES/zsh-plugins
export RUST_SRC_PTH=/usr/local/src/rust/src
export ANDROID_HOME=/usr/local/share/android-sdk
export NVM_DIR="$HOME/.nvm"

# Source a .env file in the home directory to
# avoid adding any API keys to git
source $HOME/.env
source $HOME/.zsh_functions

# Clone this theme: git@github.com:jwkicklighter/oh-my-zsh-powerline-theme.git
# Copy powerline.zsh-theme into .oh-my-zsh/themes/ (install_in_omz.sh should do this)

# Install and set terminal to 1 of these fonts: git@github.com:powerline/fonts.git
# (Any Powerline font is actually fine, even if not from that repo)
# (I use "12pt Hack" for Regular & Non-ASCII in iTerm2)
autoload -U add-zsh-hook
ZSH_THEME="spaceship"

# Custom Plugins (clone both into .oh-my-zsh/custom/plugins/[plugin name])
# git@github.com:yonchu/grunt-zsh-completion.git                Completes from Gruntfile.js
# git@github.com:zsh-users/zsh-history-substring-search.git     Searches history using typed text
# git://github.com/zsh-users/zsh-syntax-highlighting.git        Highlights terminal commands

plugins=(osx git git-flow git-extras github ruby rails wd bundler docker docker-compose gem node npm brew zsh-syntax-highlighting zsh-history-substring-search kubectl yarn systemd rake-fast jsontools)

source $ZSH/oh-my-zsh.sh

# User configuration

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
export EDITOR='vim'

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

# Misc Aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'
alias c='clear'
alias szshrc='source $HOME/.zshrc'
alias vzshrc='$EDITOR $HOME/.zshrc'
alias td='wd'
alias s='spotify play/pause'
alias sup='sudo -E zsh'
alias vimr='sudo -E vim'
alias push='pushover -T $PUSHOVER_APP_TOKEN -u $PUSHOVER_USER_KEY'
alias serve='http-server'

# Vagrant
alias vu='vagrant up'
alias vh='vagrant halt'
alias vs='vagrant suspend'
alias vst='vagrant status'

# Mac
cleanopenwith='/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/Support/lsregister -kill -r -domain local -domain user;killall Finder;echo "Open With has been rebuilt, Finder will relaunch"'

# MacVim
alias v='mvim --remote-tab-silent'
alias vtab='mvim --remote-tab-silent'

# Arch
alias y='yaourt'
alias xclip='xclip -selection clipboard'

# Grunt
alias grserve='grunt server'

# Git
alias gs='git status'
alias gf='git fetch'
alias gff='git flow feature'
alias gffc='git flow feature checkout'
alias gffp='git flow feature publish'
alias gffs='git flow feature start'
alias gfff='git flow feature finish'
alias gfh='git flow hotfix'
alias gfhc='git flow hotfix checkout'
alias gfhs='git flow hotfix start'
alias gfhf='git flow hotfix finish'
alias gfr='git flow release'
alias gfrs='git flow release start'
alias gfrf='git flow release finish'
alias gl='git log --all --graph --decorate --oneline --simplify-by-decoration'
alias gt='git tag'
alias gcuc='git commit -m "Update changelog"'
alias gffp.='git flow feature publish $(git branch | grep \* | sed -e "s/\* feature\///g")'

# Sublime Text
alias st.='st .'

# Android
alias androiddevicemonitor='$HOME/dev/android-sdk-macosx/tools/monitor'
alias adb-net='adb tcpip 5555'
alias adb-n6='adb connect 192.168.1.44'
alias adb-usb='adb usb'

# Docker
alias dcu='docker-compose up -d'
alias dcd='docker-compose down'
alias dcr='docker-compose run --rm'
alias dce='docker-compose exec'
alias dcre='docker-compose restart'
alias dcl='docker-compose logs -f'

alias dctu='docker-compose -f docker-compose.test.yml up -d'
alias dctd='docker-compose -f docker-compose.test.yml down'
alias dctr='docker-compose -f docker-compose.test.yml run --rm'
alias dctre='docker-compose -f docker-compose.test.yml restart'

alias dps='docker ps'
alias dps='docker ps'
alias dpsa='docker ps -a'
alias drm='docker rm'
alias drma='docker rm $(docker ps -aq)'

# ALL the bins!
export PATH="$HOME/sbin":$PATH
export PATH="/usr/local/bin":$PATH
export PATH=$PATH:"/usr/local/sbin"
export PATH=$PATH:"/usr/bin"
export PATH=$PATH:"/usr/sbin"
export PATH=$PATH:"/bin"
export PATH=$PATH:"/sbin"
export PATH=$PATH:"$HOME/bin"
export PATH=$PATH:"$HOME/bin/sbt"
export PATH=$PATH:"$HOME/.cabal/bin"
export PATH=$PATH:"$HOME/.cargo/bin"

# Load NVM
# NEEDS TO BE AFTER SYSTEM NODE IN $PATH
. "/usr/local/opt/nvm/nvm.sh"

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/jordan/dev/python/google-cloud-sdk/path.zsh.inc' ]; then source '/Users/jordan/dev/python/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/jordan/dev/python/google-cloud-sdk/completion.zsh.inc' ]; then source '/Users/jordan/dev/python/google-cloud-sdk/completion.zsh.inc'; fi

# Only export ruby gem path if ruby is installed
#if command -v ruby > /dev/null 2>&1; then
  #export PATH="$(ruby -e 'print Gem.user_dir')/bin:$PATH"
#fi

if _has ruby; then
  export PATH="$(ruby -e 'print Gem.user_dir')/bin:$PATH"
fi

# Only export docker-machine variables if docker-machine is installed
#if command -v docker-machine > /dev/null 2>&1 && [ $(docker-machine status) = "Running" ]; then
  #eval $(docker-machine env)
#fi

#Mono
export MONO_GAC_PREFIX="/usr/local"

# NPM
export PATH=$PATH:"/usr/local/share/npm/bin"

# Ruby
#export PATH=$PATH:"$HOME/.rvm/bin"
#[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"

# Add GHC 7.10.2 to the PATH, via https://ghcformacosx.github.io/
#export GHC_DOT_APP="/Applications/ghc-7.10.2.app"
#if [ -d "$GHC_DOT_APP" ]; then
  #export PATH="${HOME}/.local/bin:${HOME}/.cabal/bin:${GHC_DOT_APP}/Contents/bin:${PATH}"
#fi

# FZF via homebrew
if [ -e /usr/local/opt/fzf/shell/completion.zsh ]; then
  source /usr/local/opt/fzf/shell/key-bindings.zsh
  source /usr/local/opt/fzf/shell/completion.zsh
fi

# fzf + ag configuration
if _has fzf && _has ag; then
  export FZF_DEFAULT_COMMAND='ag --nocolor -g ""'
  export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
  export FZF_ALT_C_COMMAND="$FZF_DEFAULT_COMMAND"
  #export FZF_DEFAULT_OPTS='
  #--color fg:242,bg:236,hl:65,fg+:15,bg+:239,hl+:108
  #--color info:108,prompt:109,spinner:108,pointer:168,marker:168
  #'
fi


# SPACESHIP THEME CUSTOMIZATION
SPACESHIP_PROMPT_ORDER=(
  time
  user
  host
  dir
  git
  venv
  kubecontext
  exec_time
  line_sep
  jobs
  exit_code
  char
)

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"
