# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh
export DOTFILES=$HOME/dotfiles
export ZSH_PLUGINS=$DOTFILES/zsh-plugins
export RUST_SRC_PTH=/usr/local/src/rust/src

# Source a .env file in the home directory to
# avoid adding any API keys to git
source $HOME/.env

# Clone this theme: git@github.com:jwkicklighter/oh-my-zsh-powerline-theme.git
# Copy powerline.zsh-theme into .oh-my-zsh/themes/ (install_in_omz.sh should do this)

# Install and set terminal to 1 of these fonts: git@github.com:powerline/fonts.git
# (Any Powerline font is actually fine, even if not from that repo)
# (I use "12pt Hack" for Regular & Non-ASCII in iTerm2)
autoload -U add-zsh-hook
ZSH_THEME="spaceship"

# Custom Plugins (clone both into .oh-my-zsh/custom/plugins/[plugin name])
# git@github.com:yonchu/grunt-zsh-completion.git                Completes from Gruntfile.js
# git@github.com:zsh-users/zsh-history-substring-search.git     Searches history using typed text
# git://github.com/zsh-users/zsh-syntax-highlighting.git        Highlights terminal commands

plugins=(osx git git-flow git-extras github ruby rvm rails sublime wd bundler cap docker gem node npm bower gradle brew grunt zsh-syntax-highlighting brew zsh-history-substring-search gulp)

source $ZSH/oh-my-zsh.sh

# User configuration

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
export EDITOR='vim'

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

# Misc Aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'
alias c='clear'
alias szshrc='source $HOME/.zshrc'
alias vzshrc='$EDITOR $HOME/.zshrc'
alias td='wd'
alias s='spotify play/pause'
alias sup='sudo -E zsh'
alias vimr='sudo -E vim'

# Java
javar () {
  filename=$1
  basename="${filename%.*}"
  javac $filename && java $basename
}

# Vagrant
alias vu='vagrant up'
alias vh='vagrant halt'
alias vs='vagrant suspend'
alias vst='vagrant status'

# Mac
cleanopenwith='/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/Support/lsregister -kill -r -domain local -domain user;killall Finder;echo "Open With has been rebuilt, Finder will relaunch"'

# MacVim
alias v='mvim --remote-tab-silent'
alias vtab='mvim --remote-tab-silent'

# Arch
alias y='yaourt'
alias xclip='xclip -selection clipboard'

# Grunt
alias grserve='grunt server'

# Git
alias gs='git status'
alias gf='git fetch'
alias gff='git flow feature'
alias gffc='git flow feature checkout'
alias gffp='git flow feature publish'
alias gffs='git flow feature start'
alias gfff='git flow feature finish'
alias gfh='git flow hotfix'
alias gfhc='git flow hotfix checkout'
alias gfhs='git flow hotfix start'
alias gfhf='git flow hotfix finish'
alias gfr='git flow release'
alias gfrs='git flow release start'
alias gfrf='git flow release finish'
alias gl='git log --all --graph --decorate --oneline --simplify-by-decoration'
alias gt='git tag'
alias gcuc='git commit -m "Update changelog"'
alias gffp.='git flow feature publish $(git branch | grep \* | sed -e "s/\* feature\///g")'

# Sublime Text
alias st.='st .'

# Android
alias androiddevicemonitor='$HOME/dev/android-sdk-macosx/tools/monitor'
alias adb-net='adb tcpip 5555'
alias adb-n6='adb connect 192.168.1.44'
alias adb-usb='adb usb'

# Docker
alias dcu='docker-compose up -d'
alias dcd='docker-compose down'
alias dcr='docker-compose run --rm'
alias dps='docker ps'
alias dpsa='docker ps -a'
alias drm='docker rm'
alias drma='docker rm $(docker ps -aq)'

# ALL the bins!
export PATH="$HOME/sbin":$PATH
export PATH="/usr/local/bin":$PATH
export PATH=$PATH:"/usr/local/sbin"
export PATH=$PATH:"/usr/bin"
export PATH=$PATH:"/usr/sbin"
export PATH=$PATH:"/bin"
export PATH=$PATH:"/sbin"
export PATH=$PATH:"$HOME/bin"
export PATH=$PATH:"$HOME/bin/sbt"
export PATH=$PATH:"$HOME/.cabal/bin"
export PATH=$PATH:"$HOME/.cargo/bin"

# Only export ruby gem path if ruby is installed
if command -v ruby > /dev/null 2>&1; then
  export PATH="$(ruby -e 'print Gem.user_dir')/bin:$PATH"
fi

# Only export docker-machine variables if docker-machine is installed
if command -v docker-machine > /dev/null 2>&1 && [ $(docker-machine status) = "Running" ]; then
  eval $(docker-machine env)
fi

#Mono
export MONO_GAC_PREFIX="/usr/local"

# NPM
export PATH=$PATH:"/usr/local/share/npm/bin"

# Ruby
#export PATH=$PATH:"$HOME/.rvm/bin"
#[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"

# Add GHC 7.10.2 to the PATH, via https://ghcformacosx.github.io/
#export GHC_DOT_APP="/Applications/ghc-7.10.2.app"
#if [ -d "$GHC_DOT_APP" ]; then
  #export PATH="${HOME}/.local/bin:${HOME}/.cabal/bin:${GHC_DOT_APP}/Contents/bin:${PATH}"
#fi

mkc () {
    mkdir -p "$@" && cd "$@"
}

# Go Forward in Git history
# Usage: gofwd v1.2.7
gofwd() {
  git checkout `git rev-list --topo-order HEAD.."$*" | tail -1`
}

# Go Backward in Git history
# Usage: goback
alias goback='git checkout HEAD~'

function t() {
  # Defaults to 3 levels deep, do more with `t 5` or `t 1`
  # pass additional args after
  tree -I '.git|node_modules|bower_components|.DS_Store' --dirsfirst --filelimit 15 -L ${1:-3} -aC $2
}

function docker-ip() {
  docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' "$@"
}

function convert-to-mp3() {
  ffmpeg -i "$1" -f mp3 -acodec libmp3lame -ab 192000 -ar 44100 "$2"
}

# SPACESHIP THEME OPTIONS

# ORDER
SPACESHIP_PROMPT_ORDER=(
  time
  user
  host
  dir
  git
  #hg
  node
  ruby
  #xcode
  #swift
  #golang
  #php
  #rust
  #julia
  #docker
  venv
  pyenv
  exec_time
  line_sep
  #vi_mode
  char
)

# PROMPT
SPACESHIP_PROMPT_SYMBOL="‚ûú"
SPACESHIP_PROMPT_ADD_NEWLINE=true
SPACESHIP_PROMPT_SEPARATE_LINE=true
SPACESHIP_PROMPT_PREFIXES_SHOW=true
SPACESHIP_PROMPT_SUFFIXES_SHOW=true
SPACESHIP_PROMPT_DEFAULT_PREFIX="via "
SPACESHIP_PROMPT_DEFAULT_SUFFIX=" "

# TIME
SPACESHIP_TIME_SHOW=false
SPACESHIP_TIME_PREFIX="at "
SPACESHIP_TIME_SUFFIX="$SPACESHIP_PROMPT_DEFAULT_SUFFIX"
SPACESHIP_TIME_FORMAT=false
SPACESHIP_TIME_12HR=false
SPACESHIP_TIME_COLOR="yellow"

# EXECUTION TIME
SPACESHIP_EXEC_TIME_SHOW="${SPACESHIP_EXEC_TIME_SHOW:=true}"
SPACESHIP_EXEC_TIME_PREFIX="${SPACESHIP_EXEC_TIME_PREFIX:="took "}"
SPACESHIP_EXEC_TIME_SUFFIX="${SPACESHIP_EXEC_TIME_SUFFIX:="$SPACESHIP_PROMPT_DEFAULT_SUFFIX"}"
SPACESHIP_EXEC_TIME_COLOR="${SPACESHIP_EXEC_TIME_COLOR:="yellow"}"
SPACESHIP_EXEC_TIME_THRESHOLD="${SPACESHIP_EXEC_TIME_THRESHOLD:=5000}"
SPACESHIP_EXEC_TIME_MS="${SPACESHIP_EXEC_TIME_MS:=false}"

# USER
SPACESHIP_USER_SHOW=true
SPACESHIP_USER_PREFIX="with "
SPACESHIP_USER_SUFFIX="$SPACESHIP_PROMPT_DEFAULT_SUFFIX"
SPACESHIP_USER_COLOR="yellow"
SPACESHIP_USER_COLOR_ROOT="red"

# HOST
SPACESHIP_HOST_SHOW=true
SPACESHIP_HOST_PREFIX="at "
SPACESHIP_HOST_SUFFIX="$SPACESHIP_PROMPT_DEFAULT_SUFFIX"
SPACESHIP_HOST_COLOR="green"

# DIR
SPACESHIP_DIR_SHOW=true
SPACESHIP_DIR_PREFIX="in "
SPACESHIP_DIR_SUFFIX="$SPACESHIP_PROMPT_DEFAULT_SUFFIX"
SPACESHIP_DIR_TRUNC=3
SPACESHIP_DIR_COLOR="cyan"

# GIT
SPACESHIP_GIT_SHOW=true
SPACESHIP_GIT_PREFIX="on "
SPACESHIP_GIT_SUFFIX="$SPACESHIP_PROMPT_DEFAULT_SUFFIX"
SPACESHIP_GIT_SYMBOL="ÓÇ†"
# GIT BRANCH
SPACESHIP_GIT_BRANCH_SHOW=true
SPACESHIP_GIT_BRANCH_PREFIX="$SPACESHIP_GIT_SYMBOL"
SPACESHIP_GIT_BRANCH_SUFFIX=""
SPACESHIP_GIT_BRANCH_COLOR="magenta"
# GIT STATUS
SPACESHIP_GIT_STATUS_SHOW=true
SPACESHIP_GIT_STATUS_PREFIX=" ["
SPACESHIP_GIT_STATUS_SUFFIX="]"
SPACESHIP_GIT_STATUS_COLOR="red"
SPACESHIP_GIT_STATUS_UNTRACKED="‚ú≠"
SPACESHIP_GIT_STATUS_ADDED="‚úö"
SPACESHIP_GIT_STATUS_MODIFIED="‚úπ"
SPACESHIP_GIT_STATUS_RENAMED="‚ûú"
SPACESHIP_GIT_STATUS_DELETED="‚úñ"
SPACESHIP_GIT_STATUS_STASHED="$"
SPACESHIP_GIT_STATUS_UNMERGED="‚ïê"
SPACESHIP_GIT_STATUS_AHEAD="‚¨Ü"
SPACESHIP_GIT_STATUS_BEHIND="‚¨á"
SPACESHIP_GIT_STATUS_DIVERGED="‚¨ç"

# HG
SPACESHIP_HG_SHOW=true
SPACESHIP_HG_PREFIX="on "
SPACESHIP_HG_SUFFIX="$SPACESHIP_PROMPT_DEFAULT_SUFFIX"
SPACESHIP_HG_SYMBOL="‚òø "
# HG BRANCH
SPACESHIP_HG_BRANCH_SHOW=true
SPACESHIP_HG_BRANCH_PREFIX="$SPACESHIP_HG_SYMBOL"
SPACESHIP_HG_BRANCH_SUFFIX=""
SPACESHIP_HG_BRANCH_COLOR="magenta"
# HG STATUS
SPACESHIP_HG_STATUS_SHOW=true
SPACESHIP_HG_STATUS_PREFIX="["
SPACESHIP_HG_STATUS_SUFFIX="]"
SPACESHIP_HG_STATUS_COLOR="red"
SPACESHIP_HG_STATUS_UNTRACKED="?"
SPACESHIP_HG_STATUS_ADDED="+"
SPACESHIP_HG_STATUS_MODIFIED="!"
SPACESHIP_HG_STATUS_DELETED="‚úò"

# NODE
SPACESHIP_NODE_SHOW=false
SPACESHIP_NODE_PREFIX="$SPACESHIP_PROMPT_DEFAULT_PREFIX"
SPACESHIP_NODE_SUFFIX="$SPACESHIP_PROMPT_DEFAULT_SUFFIX"
SPACESHIP_NODE_SYMBOL="‚¨¢ "
SPACESHIP_NODE_DEFAULT_VERSION=""
SPACESHIP_NODE_COLOR="green"

# RUBY
SPACESHIP_RUBY_SHOW=true
SPACESHIP_RUBY_PREFIX="$SPACESHIP_PROMPT_DEFAULT_PREFIX"
SPACESHIP_RUBY_SUFFIX="$SPACESHIP_PROMPT_DEFAULT_SUFFIX"
SPACESHIP_RUBY_SYMBOL="üíé "
SPACESHIP_RUBY_COLOR="red"

# XCODE
SPACESHIP_XCODE_SHOW_LOCAL=true
SPACESHIP_XCODE_SHOW_GLOBAL=false
SPACESHIP_XCODE_PREFIX="$SPACESHIP_PROMPT_DEFAULT_PREFIX"
SPACESHIP_XCODE_SUFFIX="$SPACESHIP_PROMPT_DEFAULT_SUFFIX"
SPACESHIP_XCODE_SYMBOL="üõ† "
SPACESHIP_XCODE_COLOR="blue"

# SWIFT
SPACESHIP_SWIFT_SHOW_LOCAL=true
SPACESHIP_SWIFT_SHOW_GLOBAL=false
SPACESHIP_SWIFT_PREFIX="$SPACESHIP_PROMPT_DEFAULT_PREFIX"
SPACESHIP_SWIFT_SUFFIX="$SPACESHIP_PROMPT_DEFAULT_SUFFIX"
SPACESHIP_SWIFT_SYMBOL="üê¶ "
SPACESHIP_SWIFT_COLOR="yellow"

# GOLANG
SPACESHIP_GOLANG_SHOW=true
SPACESHIP_GOLANG_PREFIX="$SPACESHIP_PROMPT_DEFAULT_PREFIX"
SPACESHIP_GOLANG_SUFFIX="$SPACESHIP_PROMPT_DEFAULT_SUFFIX"
SPACESHIP_GOLANG_SYMBOL="üêπ "
SPACESHIP_GOLANG_COLOR="cyan"

# PHP
SPACESHIP_PHP_SHOW=true
SPACESHIP_PHP_PREFIX="$SPACESHIP_PROMPT_DEFAULT_PREFIX"
SPACESHIP_PHP_SUFFIX="$SPACESHIP_PROMPT_DEFAULT_SUFFIX"
SPACESHIP_PHP_SYMBOL="üêò "
SPACEHIP_PHP_COLOR="blue"

# RUST
SPACESHIP_RUST_SHOW=true
SPACESHIP_RUST_PREFIX="$SPACESHIP_PROMPT_DEFAULT_PREFIX"
SPACESHIP_RUST_SUFFIX="$SPACESHIP_PROMPT_DEFAULT_SUFFIX"
SPACESHIP_RUST_SYMBOL="ùó• "
SPACESHIP_RUST_COLOR="red"

# JULIA
SPACESHIP_JULIA_SHOW=true
SPACESHIP_JULIA_PREFIX="$SPACESHIP_PROMPT_DEFAULT_PREFIX"
SPACESHIP_JULIA_SUFFIX="$SPACESHIP_PROMPT_DEFAULT_SUFFIX"
SPACESHIP_JULIA_SYMBOL="‡ÆÉ "
SPACESHIP_JULIA_COLOR="green"

# DOCKER
SPACESHIP_DOCKER_SHOW=false
SPACESHIP_DOCKER_PREFIX="on "
SPACESHIP_DOCKER_SUFFIX="$SPACESHIP_PROMPT_DEFAULT_SUFFIX"
SPACESHIP_DOCKER_SYMBOL="üê≥ "
SPACESHIP_DOCKER_COLOR="cyan"

# VENV
SPACESHIP_VENV_SHOW=true
SPACESHIP_VENV_PREFIX="$SPACESHIP_PROMPT_DEFAULT_PREFIX"
SPACESHIP_VENV_SUFFIX="$SPACESHIP_PROMPT_DEFAULT_SUFFIX"
SPACESHIP_VENV_COLOR="blue"

# PYENV
SPACESHIP_PYENV_SHOW=true
SPACESHIP_PYENV_PREFIX="$SPACESHIP_PROMPT_DEFAULT_PREFIX"
SPACESHIP_PYENV_SUFFIX="$SPACESHIP_PROMPT_DEFAULT_SUFFIX"
SPACESHIP_PYENV_SYMBOL="üêç "
SPACESHIP_PYENV_COLOR="yellow"

# VI_MODE
SPACESHIP_VI_MODE_SHOW=false
SPACESHIP_VI_MODE_PREFIX=""
SPACESHIP_VI_MODE_SUFFIX="$SPACESHIP_PROMPT_DEFAULT_SUFFIX"
SPACESHIP_VI_MODE_INSERT="[I]"
SPACESHIP_VI_MODE_NORMAL="[N]"
SPACESHIP_VI_MODE_COLOR="white"
